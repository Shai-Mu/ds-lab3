// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rsoi.Lab3.LibraryService.Database;

#nullable disable

namespace Rsoi.Lab3.LibraryService.Database.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rsoi.Lab3.LibraryService.Database.Models.Books", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Condition")
                        .HasColumnType("integer");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Rsoi.Lab3.LibraryService.Database.Models.Library", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("Rsoi.Lab3.LibraryService.Database.Models.LibraryBooks", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BooksId")
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("LibraryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BooksId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LibraryId");

                    b.ToTable("LibraryBooks");
                });

            modelBuilder.Entity("Rsoi.Lab3.LibraryService.Database.Models.LibraryBooks", b =>
                {
                    b.HasOne("Rsoi.Lab3.LibraryService.Database.Models.Books", "Books")
                        .WithMany("LibraryBooks")
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rsoi.Lab3.LibraryService.Database.Models.Library", "Library")
                        .WithMany("LibraryBooks")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("Rsoi.Lab3.LibraryService.Database.Models.Books", b =>
                {
                    b.Navigation("LibraryBooks");
                });

            modelBuilder.Entity("Rsoi.Lab3.LibraryService.Database.Models.Library", b =>
                {
                    b.Navigation("LibraryBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
